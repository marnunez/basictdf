name: Linting and Testing

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      #----------------------------------------------
      #          install and run linters
      #----------------------------------------------
      - run: python -m pip install black ruff isort
      - run: ruff check -v .
      - run: black . --check
      - run: isort .
  test:
    needs: linting
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", pypy3.9]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install .
          pip install pytest

      - name: Run tests
        run: |
          pytest tests/

  coverage:
    name: Code coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Run coverage
        run: |
          pip install .
          pip install pytest pytest-cov
          pytest --cov=basictdf --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
